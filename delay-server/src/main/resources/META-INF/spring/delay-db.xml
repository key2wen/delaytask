<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
   	http://www.springframework.org/schema/jee
   	http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
   	http://www.springframework.org/schema/tx
   	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
       default-lazy-init="true" default-autowire="byName">


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url">
            <value>
                ${jdbc.druid.url}
            </value>
        </property>
        <property name="username">
            <value>${jdbc.druid.user}</value>
        </property>
        <property name="password">
            <bean
                    class="com.key.commons.util.EncryptDBPasswordFactory">
                <property name="password" value="${jdbc.druid.password}"/>
            </bean>
        </property>
        <property name="filters">
            <value>${jdbc.druid.filters}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.druid.maxActive}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.druid.initialSize}</value>
        </property>
        <property name="maxWait">
            <value>${jdbc.druid.maxWait}</value>
        </property>
        <property name="minIdle">
            <value>${jdbc.druid.minIdle}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${jdbc.druid.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="minEvictableIdleTimeMillis">
            <value>${jdbc.druid.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.druid.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>${jdbc.druid.testWhileIdle}</value>
        </property>
        <property name="testOnBorrow">
            <value>${jdbc.druid.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${jdbc.druid.testOnReturn}</value>
        </property>
        <property name="poolPreparedStatements">
            <value>${jdbc.druid.poolPreparedStatements}</value>
        </property>
        <property name="maxOpenPreparedStatements">
            <value>${jdbc.druid.maxOpenPreparedStatements}</value>
        </property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation"
                  value="classpath:META-INF/mybatis/delaytask-biz-configuration.xml"/>
        <property name="mapperLocations" value="classpath*:META-INF/mybatis/mapper/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>